[misc]
        font                  = "lime.se" 
	raisefocus            = true 
	raiseswitch           = true
        focus_follow_mouse    = true
        focus_follow_movement = true
        opacity               = 255
     
        # focus_pointer_click: click on unfocused client area:
        # true  -- default, set focus
        # false -- click go to client; including dockapps
        focus_pointer_click = true
        status_timing      = 1  #seconds
        status_path       = "~/.config/wmfs1/status.sh"
[/misc]
     
[bar]
       bg     = "#ffffff"
       fg     = "#bbbbbb"
       border = "false"
       height = "10"
     
       light_shade = 0
       dark_shade  = 0

       # Order of infobar elements:
       # t = Tag list
       # l = Layout button
       # s = Selbar
       elements_order = "stl"
     
       [systray]
               # Enable/disable systray
               active = false
     
               # Screen of systray
               screen = 0
     
               # Spacing between tray icons
               spacing = 0
       [/systray]
     
       # Remove this section to disable the selbar.
#       [selbar]
#               bg = "#ffffff"
#               fg = "#646464"
     
               # Cut title length
               # max_length = 100
     
#               [mouse] button = "3" func = "clientlist"  [/mouse]
#               [mouse] button = "4" func = "client_next" [/mouse]
#               [mouse] button = "5" func = "client_prev" [/mouse]
#       [/selbar]
     
[/bar]
     
[layouts]
         fg = "#a2a2a2"
         bg = "#ffffff"
     
       # Border around the layout button.
         border = "false"
     
       # Value menu or switch.
         system = "menu"
     
       # Value left or right.
         placement = "right"
     
       # Keep layout geo for free layout
         keep_layout_geo = false
     
       # Symbol displayed for the selected layout in the list
         selected_layout_symbol = " "
     
       # Width of layout button
         layout_button_width = "1"
     
       # Default layout
         [layout] type ="tile_right"  symbol = "r" [/layout]
     
       # Tiling layouts.
         [layout] type = "tile_right"  symbol = "r"        [/layout]
         [layout] type = "tile_left"   symbol = "l"        [/layout]
         [layout] type = "tile_top"    symbol = "t"        [/layout]
         [layout] type = "tile_bottom" symbol = "b"        [/layout]
        # [layout] type = "tile_grid"   symbol = "[]"        [/layout]
        # [layout] type = "tile_grid_vertical" symbol = "[]" [/layout]
        # [layout] type = "mirror_vertical"    symbol = "[]" [/layout]
        # [layout] type = "mirror_horizontal"  symbol = "[]" [/layout]
        # [layout] type = "max"  symbol = "[]"               [/layout]
        # [layout] type = "free" symbol = "f"               [/layout]
    
       # Other layouts.
[/layouts]
     
[tags]
       [default_tag]
             name             = "[/1/]"
#             mwfact           = 0.5
             nmaster          = 1
             layout           = "tile_right"
             resizehint       = true
             
        [/default_tag]
     
      # whether client_next on the last tag will send you on the first
      # and client_prev on the first tag will send you on the last one
        tag_round      = false
     
      # Going twice on the same tag will bring you back on the previous one
        tag_auto_prev  = true
     
        occupied_fg    = "#646464"
        occupied_bg    = "#dadada"
        sel_fg         = "#eeeeee"
        sel_bg         = "#505050"
        urgent_bg      = "#1a1a1a"
        urgent_fg      = "#3f3f3f"
     
      # If true, number of the tag will be used for name
        name_count     = false
        #default_name  = "new tag" # deprecated, use [default_tag] instead
        #default_layout = "tile_right" # deprecated, use [default_tag] instead
     
        expose_name    = "EXPOSE"
        expose_layout  = "tile_left"
           
      # Border around the tag buttons.
        border = false
     
      # Hide empty tags in tag list
        autohide = false
#	resizehint = true
     
      # Mouse buttons action on tag.
        mouse_button_tag_sel       = "1"
        mouse_button_tag_transfert = "2"
        mouse_button_tag_add       = "3"
        mouse_button_tag_next      = "5"
        mouse_button_tag_prev      = "4"
     
        [tag] name = "-" [/tag]
        [tag] name = "=" [/tag]
        [tag] name = "รฐ" [/tag]
        [tag] name = "รฃ" [/tag]
        [tag] name = "รท" [/tag]
#     	 [tag] name = "=" [/tag]
#	 [tag] name = "=" [/tag]
#	 [tag] name = "=" [/tag]
#	 [tag] name = "=" [/tag]
[/tags]
     
[root]
      # Command you can execute to set the background.
        background_command = "exec ~/.fehbg"
     
#        [mouse] button = "5" func = "tag_next"              [/mouse]
#        [mouse] button = "4" func = "tag_prev"              [/mouse]
        [mouse] button = "3" func = "menu" cmd = "rootmenu" [/mouse]
[/root]
     
[client]
        client_round         = true
        client_auto_center   = true
        border_height        = 0
        border_shadow        = false
        border_normal        = "#c3c3c3"
        border_focus         = "#505050"
        place_at_mouse       = false
        resize_corner_normal = "#c3c3c3"
        resize_corner_focus  = "#505050"
        set_new_win_master   = false
        client_tile_raise    = false
        new_client_get_mouse = true
     
      # send all client that have no tag rule in this default tag
       #default_open_tag     = 4
      # same as above but for the screen
       #default_open_screen  = 1
     
      # Space between tiled clients
        padding = 125
     
      # Modifier for mouse use
        modifier = "Alt"
     
        light_shade =  0
        dark_shade  = 0
     
      # *DEPRECATED* but works, see [rules] section
      # Set automatic free or max client
      # autofree = "xterm|MPlayer"
      # automax  = "Navigator"
     
        [mouse] button = "1" func = "client_raise" [/mouse]
        [mouse] button = "1" func = "mouse_move"   [/mouse]
        [mouse] button = "3" func = "client_raise" [/mouse]
        [mouse] button = "3" func = "mouse_resize" [/mouse]
     
      # Remove this section to delete the titlebar.
       #[titlebar]
       #              stipple   = false
       #              height    = 12
       #              fg_normal = "#7E89A2"
       #              fg_focus  = "#9F9AB3"
       #
       #    [mouse] button = "1" func = "client_raise" [/mouse]
       #    [mouse] button = "1" func = "mouse_move"   [/mouse]
       #    [mouse] button = "3" func = "client_raise" [/mouse]
       #    [mouse] button = "3" func = "mouse_resize" [/mouse]
       #
       #    [button]
       #    # Available "free", "max", "tile" flags or button.
       #    flags = "free,max,tile"
       #    [mouse] button = "1" func = "client_kill"             [/mouse]
       #    [mouse] button = "3" func = "menu" cmd = "clientmenu" [/mouse]
       #
       #    [line] coord = {1, 1, 4, 1} [/line]
       #    [line] coord = {1, 1, 1, 4} [/line]
       #    [line] coord = {1, 4, 4, 4} [/line]
       #    [/button]
       #    [/titlebar]
[/client]
     
[rules]
       # Example of rule for MPlayer
         [rule]
         instance      = "mplayer"       # First part of WM_CLASS
         free          = true       # Set automatic free client
         #max           = false      # Set automatic maximized client
         #follow_client = true     # follow the client
         #ignore_tags   = false      # ignore tag (free mode)
         [/rule]
[/rules]
     
[menu]
       # Default menu, binded on the root window, button 3.
         [set_menu]
         name = "rootmenu"
     
       # place_at_mouse = false
       # x = 1 
       # y = 1
     
       # Available "center", "left", "right" menu align. Default: "center".
         align = "left"
     
         fg_focus  = "#1c1c1c" bg_focus  = "#ffffff"
         fg_normal = "#a0a0a0" bg_normal = "#ffffff"
    
         [item] name = "urxvtc"           func = "spawn" cmd = "urxvtc"               		    [/item]
         [item] name = "ranger"          func = "spawn" cmd = "urxvtc -e ranger"     		    [/item]
         [item] name = "firefox"         func = "spawn" cmd = "firefox"		     		    [/item]
         [item] name = "scrot"           func = "spawn" cmd = "scrot benisd.png"                [/item]
         [item] name = "see ya"          func = "quit"                              		    [/item]
[/set_menu]
     
[set_menu]
          name = "clientmenu"
     
          fg_focus  = "#1c1c1c" bg_focus  = "#ffffff"
          fg_normal = "#ababab" bg_normal = "#ffffff"
     
      # Check items: possible 'check_max' or 'check_free'.
        [item] name = "Close"    func = "client_kill"  [/item]
        [item] name = "Maximize" func = "toggle_max"  check = "check_max"  [/item]
        [item] name = "Free"     func = "toggle_free" check = "check_free" [/item]
[/set_menu]
[/menu]
     
[launcher]
          [set_launcher]
      # Limit size of the launcher window (px)
        width_limit = 300
     
        name = "launcher_exec"
        prompt = "Run: "
        command = "dmenu_run -p 'run' -fn '-*-lime.se-*-*-*-10-*-*-*-*-*-*-*' -nf '#c3c3c3' -nb '#ffffff' -sf '#777777' -sb '#ffffff'"
[/set_launcher]
     
[/launcher]
     
[keys]
        [key] mod = {"Alt"} key = "r" func = "reload" [/key]
        [key] mod = {"Alt"} key = "Return" func = "spawn" cmd = "urxvtc" [/key]
        [key] mod = {"Control"} key = "l" func = "spawn" cmd = "mpc next" [/key]
        [key] mod = {"Control"} key = "h" func = "spawn" cmd = "mpc prev" [/key]
        [key] mod = {"Control"} key = "j" func = "spawn" cmd = "amixer -q set Master 4%-"  [/key]
        [key] mod = {"Control"} key = "k" func = "spawn" cmd = "amixer -q set Master 4%+"    [/key]
        [key] mod = {"Alt"} key = "p" func = "spawn" cmd = "mpc toggle" [/key]
	[key] mod = {"Alt"} key = "d" func = "spawn" cmd = "dmenu_run -p 'run' -fn '-*-lime.se-*-*-*-*-10-*-*-*-*-*-*-*' -nf '#a2a2a2' -nb '#ffffff' -sf '#777777' -sb '#ffffff'" [/key]
	[key] mod = {"Alt"} key = "n" func = "spawn" cmd = "firefox" [/key]
	[key] mod = {"Alt"} key = "z" func = "spawn" cmd = "~/bin/tunnel_status" [/key]
	[key] mod = {"Alt", "Shift"} key = "z" func = "spawn" cmd = "~/bin/tunnel_off" [/key]
	[key] mod = {"Alt"} key = "F1" func = "spawn" cmd = "~/bin/d-music" [/key]
	[key] mod = {"Alt"} key = "F2" func = "spawn" cmd = "~/bin/d-todo" [/key]
	[key] mod = {"Alt"} key = "F3" func = "spawn" cmd = "~/bin/d-date" [/key]
	[key] mod = {"Alt"} key = "F4" func = "spawn" cmd = "~/bin/d-hardware" [/key]
#	[key] mod = {"Alt"} key = "F5" func = "spawn" cmd = "~/bin/d-pwr" [/key]	

        [key] mod = {"Alt"} key = "c" func = "client_kill" [/key]
        [key] mod = {"Super"} key = "h" func = "client_swap_prev" [/key]
        [key] mod = {"Super"} key = "l" func = "client_swap_next" [/key]
        [key] mod = {"Alt"} key = "m" func = "client_set_master" [/key]
        [key] mod = {"Alt"} key = "t" func = "toggle_free" [/key]    
        [key] mod = {"Alt"} key = "l" func = "client_next" [/key]
        [key] mod = {"Alt"} key = "h" func = "client_prev" [/key]
	[key] mod = {"Alt", "Shift"} key = "l" func = "set_mwfact" cmd = "+0.005" [/key]
	[key] mod = {"Alt", "Shift"} key = "h" func = "set_mwfact" cmd = "-0.005" [/key]

        [key] mod = {"Alt"} key = "k" func = "tag_next" [/key]
        [key] mod = {"Alt"} key = "j" func = "tag_prev" [/key]
        [key] mod = {"Alt"} key = "o" func = "layout_next" [/key]
        [key] mod = {"Alt"} key = "i" func = "layout_prev" [/key]
	[key] mod = {"Control"} key = "f" func = "layout_free" [/key]
        [key] mod = {"Alt", "Shift"} key = "j" func = "set_nmaster" cmd = "+1" [/key]
        [key] mod = {"Alt", "Shift"} key = "k" func = "set_nmaster" cmd = "-1" [/key]
       # [key] mod = {"Alt"} key = "l" func = "set_mwfact" cmd = "+0.025" [/key]
       # [key] mod = {"Alt"} key = "h" func = "set_mwfact" cmd = "-0.025" [/key]
     
      # Set the tag x.
        [key] mod = {"Alt"} key = "1" func = "tag" cmd = "1" [/key]
        [key] mod = {"Alt"} key = "2" func = "tag" cmd = "2" [/key]
        [key] mod = {"Alt"} key = "3" func = "tag" cmd = "3" [/key]
        [key] mod = {"Alt"} key = "4" func = "tag" cmd = "4" [/key]
        [key] mod = {"Alt"} key = "5" func = "tag" cmd = "5" [/key]
        [key] mod = {"Alt"} key = "6" func = "tag" cmd = "6" [/key]
        [key] mod = {"Alt"} key = "7" func = "tag" cmd = "7" [/key]
        [key] mod = {"Alt"} key = "8" func = "tag" cmd = "8" [/key]
        [key] mod = {"Alt"} key = "9" func = "tag" cmd = "9" [/key]
     
      # Transfert selected client to x.
        [key] mod = {"Alt", "Shift"} key = "1" func = "tag_transfert" cmd ="1" [/key]
        [key] mod = {"Alt", "Shift"} key = "2" func = "tag_transfert" cmd ="2" [/key]
        [key] mod = {"Alt", "Shift"} key = "3" func = "tag_transfert" cmd ="3" [/key]
        [key] mod = {"Alt", "Shift"} key = "4" func = "tag_transfert" cmd ="4" [/key]
        [key] mod = {"Alt", "Shift"} key = "5" func = "tag_transfert" cmd ="5" [/key]
        [key] mod = {"Alt", "Shift"} key = "6" func = "tag_transfert" cmd ="6" [/key]
        [key] mod = {"Alt", "Shift"} key = "7" func = "tag_transfert" cmd ="7" [/key]
        [key] mod = {"Alt", "Shift"} key = "8" func = "tag_transfert" cmd ="8" [/key]
        [key] mod = {"Alt", "Shift"} key = "9" func = "tag_transfert" cmd ="9" [/key]
     
      # Toggle additional tags (x) on the current tag
        [key] mod = {"Alt", "Super"} key = "F1" func = "tag_toggle_additional" cmd ="1" [/key]
        [key] mod = {"Alt", "Super"} key = "F2" func = "tag_toggle_additional" cmd ="2" [/key]
        [key] mod = {"Alt", "Super"} key = "F3" func = "tag_toggle_additional" cmd ="3" [/key]
        [key] mod = {"Alt", "Super"} key = "F4" func = "tag_toggle_additional" cmd ="4" [/key]
        [key] mod = {"Alt", "Super"} key = "F5" func = "tag_toggle_additional" cmd ="5" [/key]
        [key] mod = {"Alt", "Super"} key = "F6" func = "tag_toggle_additional" cmd ="6" [/key]
        [key] mod = {"Alt", "Super"} key = "F7" func = "tag_toggle_additional" cmd ="7" [/key]
        [key] mod = {"Alt", "Super"} key = "F8" func = "tag_toggle_additional" cmd ="8" [/key]
        [key] mod = {"Alt", "Super"} key = "F9" func = "tag_toggle_additional" cmd ="9" [/key]
     
      # change screen
        [key] mod = {"Super"} key = "Tab" func = "screen_next"          [/key]
        [key] mod = {"Super", "Shift"} key = "Tab" func = "screen_prev" [/key]
     
      # swap client in the next/prev screen
        [key] mod = {"Super", "Shift"} key = "a" func = "client_screen_next" [/key]
        [key] mod = {"Super", "Shift"} key = "z" func = "client_screen_prev" [/key]
        [key] mod = {"Super", "Shift"} key = "e" func = "toggle_tag_expose"  [/key]
#        [key] mod = {"Control"} key = "Down" func = "tag_transfert_prev"     [/key]
#        [key] mod = {"Control"} key = "Down" func = "tag_prev"               [/key]
#        [key] mod = {"Control"} key = "Up" func = "tag_transfert_next"       [/key]
#        [key] mod = {"Control"} key = "Up" func = "tag_next"                 [/key]
     
      # unlisted fonctions that can be used in [key] func = ""
      # client_focus_{right, left, top, bottom}
      # client_ignore_tag # Toggle the client in ignore_tag (display the client on all tags)
      # tag_prev_sel # go back to the previous selected tag
      # tag_transfert_{next, prev}
      # tag_urgent # go to the urgent tag
      # tag_swap_{next, prev} # swap tag with the previous/next one
      # tag_last # go to the last tag
      # tag_stay_last # toggle the current tag as the last one
      # toggle_abovefc
      # screen_prev_sel # go to the previous screen selected
      # set_layout # set layout. need to be called with cmd = "<layout_name>"
      # ignore_next_client_rules # ignore the rule the next time a rule is called
[/keys]
     
